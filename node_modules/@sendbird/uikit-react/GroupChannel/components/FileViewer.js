import { _ as __assign, b as __awaiter, c as __generator } from '../../chunks/bundle-DseT8u_-.js';
import React__default from 'react';
import { u as useGroupChannel } from '../../chunks/bundle-N3ga3E1_.js';
import { F as FileViewerView } from '../../chunks/bundle-DF3W2Rb9.js';
import { u as useSendbird } from '../../chunks/bundle-B_GgIa4W.js';
import '@sendbird/chat/message';
import '@sendbird/chat/groupChannel';
import '@sendbird/uikit-tools';
import '../../chunks/bundle-BCWy1eRp.js';
import '../../chunks/bundle-BJLoBQCe.js';
import '../../chunks/bundle-CafUCQoC.js';
import '../../chunks/bundle-1qCVlMXW.js';
import '../../chunks/bundle-DDJKNqBp.js';
import '../../chunks/bundle-0TrdjZtT.js';
import '../../chunks/bundle-CBfyMFC9.js';
import '../../chunks/bundle---aixLy5.js';
import '../../chunks/bundle-LBCBjs9d.js';
import '../../chunks/bundle-CopK-w3W.js';
import '../../chunks/bundle-DVYMPV3i.js';
import '../../chunks/bundle-DirGjNLX.js';
import 'react-dom';
import '../../chunks/bundle-BUm1uq9-.js';
import '../../ui/ImageRenderer.js';
import '../../chunks/bundle-DLAbAE6W.js';
import '../../ui/Icon.js';
import '../../chunks/bundle-fMVQGLVC.js';
import '../../chunks/bundle-ubX26fzL.js';
import '../../chunks/bundle-DBSWrD1e.js';
import '../../utils/message/getOutgoingMessageState.js';
import '../../chunks/bundle-D1D0Y4xo.js';
import '../../chunks/bundle-C__iJnzl.js';
import '../../hooks/useModal.js';
import '../../chunks/bundle-BtliqdNT.js';
import '../../chunks/bundle-eyKmYzrx.js';
import '../../chunks/bundle-BJzhuBtM.js';
import '../../chunks/bundle-KhnlGrVI.js';
import '../../ui/IconButton.js';
import '../../ui/Button.js';
import '../../chunks/bundle-DTKm24fD.js';
import '@sendbird/chat';
import '@sendbird/chat/openChannel';

var FileViewer = function (props) {
    var _a = useGroupChannel(), onBeforeDownloadFileMessage = _a.state.onBeforeDownloadFileMessage, deleteMessage = _a.actions.deleteMessage;
    var logger = useSendbird().state.config.logger;
    return (React__default.createElement(FileViewerView, __assign({}, props, { deleteMessage: deleteMessage, onDownloadClick: function (e) { return __awaiter(void 0, void 0, void 0, function () {
            var allowDownload, err_1;
            var _a, _b;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        if (!onBeforeDownloadFileMessage)
                            return [2 /*return*/];
                        _c.label = 1;
                    case 1:
                        _c.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, onBeforeDownloadFileMessage({ message: props.message })];
                    case 2:
                        allowDownload = _c.sent();
                        if (!allowDownload) {
                            e.preventDefault();
                            (_a = logger.info) === null || _a === void 0 ? void 0 : _a.call(logger, 'FileViewer: Not allowed to download.');
                        }
                        return [3 /*break*/, 4];
                    case 3:
                        err_1 = _c.sent();
                        (_b = logger.error) === null || _b === void 0 ? void 0 : _b.call(logger, 'FileViewer: Error occurred while determining download continuation:', err_1);
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        }); } })));
};

export { FileViewer, FileViewer as default };
//# sourceMappingURL=FileViewer.js.map
