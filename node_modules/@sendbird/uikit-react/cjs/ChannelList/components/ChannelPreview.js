'use strict';

var React = require('react');
var LocalizationContext = require('../../chunks/bundle-DcN1PHcN.js');
var ChannelList_context = require('../../chunks/bundle-D7a7lRhc.js');
var ui_MessageStatus = require('../../chunks/bundle-DBfn8v_s.js');
var GroupChannelListItemView = require('../../chunks/bundle-CESWZ6Ke.js');
var useSendbird = require('../../chunks/bundle-DVLcUvUT.js');
require('../../chunks/bundle-bHxwJtYj.js');
require('../../chunks/bundle-rjBp4QCu.js');
require('../../chunks/bundle-B8yyLIhC.js');
require('@sendbird/chat/groupChannel');
require('../../chunks/bundle-e1RcyXEh.js');
require('../../chunks/bundle-CSL84Mpm.js');
require('../../chunks/bundle-CWKemlba.js');
require('../../chunks/bundle-BCTa9jYZ.js');
require('../../chunks/bundle-CTbRos2s.js');
require('../../chunks/bundle-CY1y7JJW.js');
require('../../chunks/bundle-BfwsoZ_f.js');
require('../../utils/message/getOutgoingMessageState.js');
require('../../chunks/bundle-DxLfx2gA.js');
require('../../chunks/bundle-vOqLpYwi.js');
require('../../chunks/bundle-DfxuJbi-.js');
require('../../chunks/bundle-BNyKt7U9.js');
require('../../ui/Icon.js');
require('../../chunks/bundle-lBm_66LS.js');
require('../../ui/Loader.js');
require('../../chunks/bundle-DbxOf2R0.js');
require('../../chunks/bundle-BXs1Q9r8.js');
require('../../chunks/bundle-Cnw2-Jv9.js');
require('../../chunks/bundle-DcUoqLZn.js');
require('../../GroupChannel/components/TypingIndicator.js');
require('../../ui/Badge.js');
require('../../ui/ChannelAvatar.js');
require('../../chunks/bundle-kff9Zj9O.js');
require('../../ui/ImageRenderer.js');
require('../../chunks/bundle-BDCiiker.js');
require('../../chunks/bundle-C7qr3IUb.js');
require('../../ui/MentionUserLabel.js');
require('../../chunks/bundle-BkM3gvpZ.js');
require('../../chunks/bundle-Cg_wfVMn.js');
require('react-dom');
require('../../ui/IconButton.js');
require('../../ui/Button.js');
require('../../ui/TextButton.js');
require('../../chunks/bundle-DsHHiIba.js');
require('../../chunks/bundle-j9d_a2oN.js');
require('../../chunks/bundle-CrDIwW5W.js');
require('@sendbird/chat');
require('@sendbird/chat/openChannel');

function _interopDefaultCompat (e) { return e && typeof e === 'object' && 'default' in e ? e : { default: e }; }

var React__default = /*#__PURE__*/_interopDefaultCompat(React);

/**
 * @deprecated This component is deprecated and will be removed in the next major update.
 * Please use the `GroupChannel` component from '@sendbird/uikit-react/GroupChannel' instead.
 * For more information, please refer to the migration guide:
 * https://docs.sendbird.com/docs/chat/uikit/v3/react/introduction/group-channel-migration-guide
 */
var ChannelPreview = function (_a) {
    var _b, _c, _d, _e;
    var channel = _a.channel, _f = _a.isActive, isActive = _f === void 0 ? false : _f, _g = _a.isSelected, isSelected = _g === void 0 ? false : _g, _h = _a.isTyping, isTyping = _h === void 0 ? false : _h, renderChannelAction = _a.renderChannelAction, onLeaveChannel = _a.onLeaveChannel, onClick = _a.onClick, tabIndex = _a.tabIndex;
    var state = useSendbird.useSendbird().state;
    var config = state.config;
    var stringSet = LocalizationContext.useLocalization().stringSet;
    var _j = ChannelList_context.useChannelListContext(), _k = _j.isTypingIndicatorEnabled, isTypingIndicatorEnabled = _k === void 0 ? false : _k, _l = _j.isMessageReceiptStatusEnabled, isMessageReceiptStatusEnabled = _l === void 0 ? false : _l;
    var userId = config.userId;
    var isMessageStatusEnabled = isMessageReceiptStatusEnabled
        && (((_b = channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null || _b === void 0 ? void 0 : _b.messageType) === 'user' || ((_c = channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null || _c === void 0 ? void 0 : _c.messageType) === 'file')
        && ((_e = (_d = channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null || _d === void 0 ? void 0 : _d.sender) === null || _e === void 0 ? void 0 : _e.userId) === userId;
    return (React__default.default.createElement(GroupChannelListItemView.GroupChannelListItemView, { channel: channel, tabIndex: tabIndex, isTyping: isTypingIndicatorEnabled && isTyping, isSelected: isSelected !== null && isSelected !== void 0 ? isSelected : isActive, channelName: ui_MessageStatus.getChannelTitle(channel, userId, stringSet), isMessageStatusEnabled: isMessageStatusEnabled, onClick: onClick, onLeaveChannel: onLeaveChannel, renderChannelAction: renderChannelAction }));
};

module.exports = ChannelPreview;
//# sourceMappingURL=ChannelPreview.js.map
