import React__default from 'react';
import { u as useOpenChannelContext } from '../../chunks/bundle-DgpIR2TV.js';
import OpenChannelInput from './OpenChannelInput.js';
import FrozenNotification from './FrozenChannelNotification.js';
import OpenchannelConversationHeader from './OpenChannelHeader.js';
import PlaceHolder, { PlaceHolderTypes } from '../../ui/PlaceHolder.js';
import OpenChannelMessageList from './OpenChannelMessageList.js';
import '../../chunks/bundle-eyKmYzrx.js';
import '../../chunks/bundle-DseT8u_-.js';
import '../../chunks/bundle-ubX26fzL.js';
import '../../chunks/bundle-BJzhuBtM.js';
import '../../chunks/bundle-BCWy1eRp.js';
import '../../chunks/bundle-B_GgIa4W.js';
import '../../chunks/bundle-CafUCQoC.js';
import '../../chunks/bundle-1qCVlMXW.js';
import '@sendbird/chat';
import '@sendbird/chat/groupChannel';
import '@sendbird/chat/openChannel';
import '../../chunks/bundle-vbkNCu0L.js';
import '../../chunks/bundle-LBCBjs9d.js';
import '../../chunks/bundle-DTKm24fD.js';
import '../../chunks/bundle-DpNFZaR5.js';
import '../../chunks/bundle-DLAbAE6W.js';
import '../../hooks/useModal.js';
import '../../chunks/bundle-DirGjNLX.js';
import '../../chunks/bundle-DVYMPV3i.js';
import '../../chunks/bundle-BtliqdNT.js';
import 'react-dom';
import '../../chunks/bundle-KhnlGrVI.js';
import '../../ui/IconButton.js';
import '../../ui/Button.js';
import '../../chunks/bundle-fMVQGLVC.js';
import '../../ui/Icon.js';
import '../../ui/MessageInput.js';
import '../../chunks/bundle-DhyxF0Xw.js';
import '../../chunks/bundle-0TrdjZtT.js';
import '../../chunks/bundle-4VxKLKl_.js';
import 'dompurify';
import '../../chunks/bundle-C393fElF.js';
import '../../chunks/bundle-DORSLJqP.js';
import '../../chunks/bundle-CT-NzRzq.js';
import '../../chunks/bundle-DBSWrD1e.js';
import '../../utils/message/getOutgoingMessageState.js';
import '../../chunks/bundle-D1D0Y4xo.js';
import '../../chunks/bundle-C__iJnzl.js';
import '../../chunks/bundle-AgGVGhWf.js';
import '../../chunks/bundle-BUm1uq9-.js';
import '../../ui/ImageRenderer.js';
import '../../ui/Loader.js';
import '../../chunks/bundle-DuQ2vnIR.js';
import './OpenChannelMessage.js';
import '../../chunks/bundle-DT0pStRO.js';
import '../../ui/OpenchannelUserMessage.js';
import '../../chunks/bundle-QNHGsSZN.js';
import '../../ui/SortByRow.js';
import '../../ui/UserProfile.js';
import '../../sendbirdSelectors.js';
import '../../chunks/bundle-CNCNuj5j.js';
import '../../chunks/bundle-BOVHCMAF.js';
import '../../chunks/bundle-BWTxQFSl.js';
import '../../ui/OpenChannelAdminMessage.js';
import '../../ui/OpenchannelOGMessage.js';
import '../../ui/LinkLabel.js';
import '../../chunks/bundle-DJ_OSSMT.js';
import '../../Message/context.js';
import '../../ui/MentionLabel.js';
import '../../ui/OpenchannelThumbnailMessage.js';
import '../../ui/OpenchannelFileMessage.js';
import '../../ui/TextButton.js';
import '../../chunks/bundle-CO1y7D0u.js';
import '../../ui/DateSeparator.js';
import '../../ui/FileViewer.js';
import '../../chunks/bundle-CMjQ-cCa.js';
import '@sendbird/uikit-tools';
import '../../chunks/bundle-B9mN-BTk.js';
import '../../chunks/bundle-AMj0Sfpz.js';
import '../../chunks/bundle-D8LhPr4e.js';
import '../../chunks/bundle-CDYhXWNX.js';
import '@sendbird/chat/message';
import '../../Channel/utils/compareMessagesForGrouping.js';

var COMPONENT_CLASS_NAME = 'sendbird-openchannel-conversation';
var OpenChannelUI = function (_a) {
    var renderMessage = _a.renderMessage, renderHeader = _a.renderHeader, renderPlaceHolderEmptyList = _a.renderPlaceHolderEmptyList, renderPlaceHolderError = _a.renderPlaceHolderError, renderPlaceHolderLoading = _a.renderPlaceHolderLoading, renderMessageInput = _a.renderMessageInput, renderInput = _a.renderInput;
    var _b = useOpenChannelContext(), currentOpenChannel = _b.currentOpenChannel, amIBanned = _b.amIBanned, loading = _b.loading, isInvalid = _b.isInvalid, messageInputRef = _b.messageInputRef, conversationScrollRef = _b.conversationScrollRef;
    if (!currentOpenChannel
        || !(currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.url)
        || amIBanned) {
        return ((renderPlaceHolderError === null || renderPlaceHolderError === void 0 ? void 0 : renderPlaceHolderError())
            || React__default.createElement("div", { className: COMPONENT_CLASS_NAME },
                React__default.createElement(PlaceHolder, { type: PlaceHolderTypes.NO_CHANNELS })));
    }
    if (loading) {
        return ((renderPlaceHolderLoading === null || renderPlaceHolderLoading === void 0 ? void 0 : renderPlaceHolderLoading())
            || React__default.createElement("div", { className: COMPONENT_CLASS_NAME },
                React__default.createElement(PlaceHolder, { type: PlaceHolderTypes.LOADING })));
    }
    if (isInvalid) {
        return ((renderPlaceHolderError === null || renderPlaceHolderError === void 0 ? void 0 : renderPlaceHolderError())
            || React__default.createElement("div", { className: COMPONENT_CLASS_NAME },
                React__default.createElement(PlaceHolder, { type: PlaceHolderTypes.WRONG })));
    }
    var renderInputComponent = renderMessageInput || renderInput;
    return (React__default.createElement("div", { className: COMPONENT_CLASS_NAME },
        (renderHeader === null || renderHeader === void 0 ? void 0 : renderHeader()) || React__default.createElement(OpenchannelConversationHeader, null),
        (currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.isFrozen) && React__default.createElement(FrozenNotification, null),
        React__default.createElement(OpenChannelMessageList, { ref: conversationScrollRef, renderMessage: renderMessage, renderPlaceHolderEmptyList: renderPlaceHolderEmptyList }),
        (renderInputComponent === null || renderInputComponent === void 0 ? void 0 : renderInputComponent()) || React__default.createElement(OpenChannelInput, { ref: messageInputRef })));
};

export { OpenChannelUI as default };
//# sourceMappingURL=OpenChannelUI.js.map
