import React__default, { useContext } from 'react';
import { L as LocalizationContext } from '../../chunks/bundle-eyKmYzrx.js';
import MessageInput from '../../ui/MessageInput.js';
import { u as useOpenChannelContext } from '../../chunks/bundle-DgpIR2TV.js';
import '../../chunks/bundle-DseT8u_-.js';
import '../../chunks/bundle-ubX26fzL.js';
import '../../chunks/bundle-BJzhuBtM.js';
import '../../chunks/bundle-DhyxF0Xw.js';
import '../../chunks/bundle-0TrdjZtT.js';
import '../../ui/IconButton.js';
import '../../ui/Button.js';
import '../../chunks/bundle-fMVQGLVC.js';
import '../../chunks/bundle-4VxKLKl_.js';
import 'dompurify';
import '../../chunks/bundle-C393fElF.js';
import '../../chunks/bundle-DORSLJqP.js';
import '../../chunks/bundle-CT-NzRzq.js';
import '../../ui/Icon.js';
import '../../chunks/bundle-DVYMPV3i.js';
import '../../chunks/bundle-DBSWrD1e.js';
import '@sendbird/chat/groupChannel';
import '../../utils/message/getOutgoingMessageState.js';
import '../../chunks/bundle-D1D0Y4xo.js';
import '../../chunks/bundle-DirGjNLX.js';
import '../../chunks/bundle-C__iJnzl.js';
import '../../chunks/bundle-1qCVlMXW.js';
import '../../chunks/bundle-AgGVGhWf.js';
import '../../chunks/bundle-B_GgIa4W.js';
import '../../chunks/bundle-CafUCQoC.js';
import '@sendbird/chat';
import '@sendbird/chat/openChannel';
import '../../chunks/bundle-BCWy1eRp.js';
import '../../chunks/bundle-vbkNCu0L.js';
import '../../chunks/bundle-LBCBjs9d.js';
import '../../chunks/bundle-DTKm24fD.js';
import '../../chunks/bundle-DpNFZaR5.js';
import '../../chunks/bundle-DLAbAE6W.js';
import '../../hooks/useModal.js';
import '../../chunks/bundle-BtliqdNT.js';
import 'react-dom';
import '../../chunks/bundle-KhnlGrVI.js';

var OpenChannelInput = React__default.forwardRef(function (props, ref) {
    var _a = useOpenChannelContext(), currentOpenChannel = _a.currentOpenChannel, disabled = _a.disabled, handleSendMessage = _a.handleSendMessage, handleFileUpload = _a.handleFileUpload, amIMuted = _a.amIMuted;
    var channel = currentOpenChannel;
    var stringSet = useContext(LocalizationContext).stringSet;
    var value = props.value;
    function getPlaceHolderString() {
        if (amIMuted) {
            return stringSet.MESSAGE_INPUT__PLACE_HOLDER__MUTED;
        }
        if (disabled) {
            return stringSet.MESSAGE_INPUT__PLACE_HOLDER__DISABLED;
        }
        return '';
    }
    if (!channel) {
        return null;
    }
    return (React__default.createElement("div", { className: "sendbird-openchannel-footer" },
        React__default.createElement(MessageInput, { channel: currentOpenChannel, ref: ref, value: value, disabled: disabled, isVoiceMessageEnabled: false, onSendMessage: handleSendMessage, onFileUpload: handleFileUpload, placeholder: getPlaceHolderString() })));
});

export { OpenChannelInput as default };
//# sourceMappingURL=OpenChannelInput.js.map
