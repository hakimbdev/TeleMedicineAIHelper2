import { User } from '@sendbird/chat';
import { LoggerInterface } from '../../../Logger';
import { MessageTemplatesInfo, SendbirdState } from '../../types';
export declare const useSendbird: () => {
    state: SendbirdState;
    actions: {
        disconnect: ({ logger }: {
            logger: LoggerInterface;
        }) => Promise<void>;
        connect: (params: any) => Promise<void>;
        initUser: (payload: any) => void;
        resetUser: () => void;
        updateUserInfo: (payload: User) => void;
        setSdkLoading: (payload: any) => void;
        sdkError: () => void;
        initSdk: (payload: any) => void;
        resetSdk: () => void;
        initMessageTemplateInfo: ({ payload }: {
            payload: MessageTemplatesInfo;
        }) => void;
        upsertMessageTemplates: ({ payload }: {
            payload: any;
        }) => SendbirdState;
        upsertWaitingTemplateKeys: ({ payload }: {
            payload: any;
        }) => void;
        markErrorWaitingTemplateKeys: ({ payload }: {
            payload: any;
        }) => void;
    };
};
export default useSendbird;
